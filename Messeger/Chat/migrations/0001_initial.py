# Generated by Django 5.0.6 on 2024-07-10 08:47

import Chat.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunityChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(db_index=True, max_length=50, unique=True, validators=[Chat.models.alphanumeric_validator], verbose_name='Group Id')),
                ('title', models.CharField(max_length=50, null=True, validators=[Chat.models.alphanumeric_validator], verbose_name='Name')),
                ('DateCreated', models.CharField(blank=True, null=True, verbose_name='Date Created')),
                ('description', models.CharField(max_length=100, null=True, verbose_name='Description')),
                ('ProfilePic', models.ImageField(blank=True, default='fallback.jpeg', upload_to='images/', verbose_name='Profile Picture')),
                ('about', models.CharField(blank=True, max_length=100, null=True, validators=[Chat.models.alphanumeric_validator], verbose_name='About')),
                ('ChatLogs', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GroupChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(db_index=True, max_length=50, unique=True, validators=[Chat.models.alphanumeric_validator], verbose_name='Group Id')),
                ('title', models.CharField(max_length=50, null=True, validators=[Chat.models.alphanumeric_validator], verbose_name='Name')),
                ('DateCreated', models.CharField(blank=True, null=True, verbose_name='Date Created')),
                ('description', models.CharField(max_length=100, null=True, verbose_name='Description')),
                ('ProfilePic', models.ImageField(blank=True, default='fallback.jpeg', upload_to='images/', verbose_name='Profile Picture')),
                ('about', models.CharField(blank=True, max_length=100, null=True, validators=[Chat.models.alphanumeric_validator], verbose_name='About')),
                ('UsersList', models.JSONField(blank=True, null=True)),
                ('ChatLogs', models.JSONField(blank=True, null=True)),
                ('Creator', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobsTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, db_index=True, max_length=80, null=True)),
                ('OpenedDate', models.CharField(blank=True, db_index=True, max_length=500, null=True)),
                ('Details', models.JSONField(blank=True, null=True)),
                ('Request', models.JSONField(blank=True, null=True)),
                ('RequestIDs', models.JSONField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, db_index=True, max_length=50, null=True, validators=[django.core.validators.EmailValidator])),
            ],
        ),
        migrations.CreateModel(
            name='NotePad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, db_index=True, max_length=50, null=True, validators=[django.core.validators.EmailValidator])),
                ('DateCreated', models.CharField(blank=True, null=True)),
                ('LastText', models.TextField(blank=True, default='last text', null=True)),
                ('NoteLog', models.JSONField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalChats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(db_index=True, max_length=50, unique=True, validators=[Chat.models.alphanumeric_validator], verbose_name='Group Id')),
                ('SenderId', models.CharField(max_length=50, null=True, validators=[Chat.models.alphanumeric_validator])),
                ('RecieverId', models.CharField(blank=True, max_length=50, null=True, validators=[Chat.models.alphanumeric_validator])),
                ('DateCreated', models.CharField(blank=True, null=True, verbose_name='Date Created')),
                ('Details', models.JSONField(blank=True, null=True)),
                ('ChatLog', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RequestJobTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Details', models.JSONField(blank=True, null=True)),
                ('userID', models.CharField(blank=True, db_index=True, null=True)),
                ('JobID', models.CharField(blank=True, db_index=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RequestTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserId', models.CharField(db_index=True)),
                ('RoomName', models.CharField(db_index=True)),
                ('UserDetails', models.JSONField()),
                ('status', models.CharField(default='False')),
                ('Creator', models.EmailField(db_index=True, default='kenjicladia@gmail.com', max_length=254, validators=[django.core.validators.EmailValidator])),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=40, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('name', models.CharField(max_length=30, validators=[Chat.models.alphanumeric_validator])),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('rattings', models.IntegerField(default=1)),
                ('JobsHistory', models.JSONField(blank=True, null=True)),
                ('requestedJobs', models.JSONField(blank=True, null=True)),
                ('ProfilePic', models.ImageField(blank=True, default='images/fallback.jpeg', upload_to='images/', verbose_name='Profile Picture')),
                ('about', models.CharField(blank=True, max_length=80, null=True, validators=[Chat.models.alphanumeric_validator], verbose_name='About')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='useraccount_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='useraccount_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlacklistableToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='Key')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_token', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
                'abstract': False,
            },
        ),
    ]
